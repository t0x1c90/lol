
        
        local SpectralLoader = Instance.new("ScreenGui")
        local BackFrame = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local TopFrame = Instance.new("Frame")
        local UICorner_2 = Instance.new("UICorner")
        local UIGradient = Instance.new("UIGradient")
        local TextLabel = Instance.new("TextLabel")
        local UIGradient_2 = Instance.new("UIGradient")
        local LoadingText = Instance.new("TextLabel")
        local LoadingFrame = Instance.new("Frame")
        local UICorner_3 = Instance.new("UICorner")
        local UIGradient_3 = Instance.new("UIGradient")
        local Loading = Instance.new("Frame")
        local UICorner_4 = Instance.new("UICorner")
        local UIGradient_4 = Instance.new("UIGradient")
        local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
        
        SpectralLoader.Name = "SpectralLoader"
        SpectralLoader.Parent = game.CoreGui
        SpectralLoader.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        BackFrame.Name = "BackFrame"
        BackFrame.Parent = SpectralLoader
        BackFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        BackFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        BackFrame.Position = UDim2.new(0.494000000, 0, 1.07000005, 0)
        BackFrame.Size = UDim2.new(3, 450, 0, 100)
        
        UICorner.CornerRadius = UDim.new(0, 12)
        UICorner.Parent = BackFrame
        
        TopFrame.Name = "TopFrame"
        TopFrame.Parent = BackFrame
        TopFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TopFrame.Size = UDim2.new(0, 359, 0, 30)
        TopFrame.BackgroundTransparency = 1
        
        UICorner_2.CornerRadius = UDim.new(0, 12)
        UICorner_2.Parent = TopFrame
        
        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 255, 238)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 255))}
        UIGradient.Rotation = 90
        UIGradient.Parent = TopFrame
        
        TextLabel.Parent = TopFrame
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.Position = UDim2.new(0.387811601, 0, -0.0344827585, 0)
        TextLabel.Size = UDim2.new(0, 87, 0, 29)
        TextLabel.Font = Enum.Font.ArialBold
        TextLabel.Text = "Spectral"
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextWrapped = true
        
        UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(25, 25, 25)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(25, 25, 25))}
        UIGradient_2.Offset = Vector2.new(0.5, 0)
        UIGradient_2.Rotation = 90
        UIGradient_2.Parent = BackFrame
        
        LoadingText.Name = "LoadingText"
        LoadingText.Parent = BackFrame
        LoadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        LoadingText.BackgroundTransparency = 1.000
        LoadingText.Position = UDim2.new(0.0775623247, 0, 0.286810249, 0)
        LoadingText.Size = UDim2.new(0, 312, 0, 25)
        LoadingText.Font = Enum.Font.ArialBold
        LoadingText.Text = "Welcome to Spectral"
        LoadingText.TextColor3 = Color3.fromRGB(163, 163, 163)
        LoadingText.TextScaled = true
        LoadingText.TextSize = 14.000
        LoadingText.TextWrapped = true
        
        LoadingFrame.Name = "LoadingFrame"
        LoadingFrame.Parent = BackFrame
        LoadingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        LoadingFrame.Position = UDim2.new(0.0526315793, 0, 0.605504572, 0)
        LoadingFrame.Size = UDim2.new(0, 321, 0, 26)
        
        UICorner_3.CornerRadius = UDim.new(0, 12)
        UICorner_3.Parent = LoadingFrame
        
        UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(106, 106, 106)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(61, 61, 61))}
        UIGradient_3.Rotation = 90
        UIGradient_3.Parent = LoadingFrame
        
        Loading.Name = "Loading"
        Loading.Parent = LoadingFrame
        Loading.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Loading.Position = UDim2.new(0, 0, -0.00988065265, 0)
        Loading.Size = UDim2.new(0.0280373823, 0, 1.00988066, 0)
        
        UICorner_4.CornerRadius = UDim.new(0, 12)
        UICorner_4.Parent = Loading
        
        UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 255, 238)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 255))}
        UIGradient_4.Rotation = 90
        UIGradient_4.Parent = Loading
        
        UIAspectRatioConstraint.Parent = BackFrame
        UIAspectRatioConstraint.AspectRatio = 3.574
        
        
        local function TFOQWM_fake_script()
            local script = Instance.new('LocalScript', Loading)
        
            local LoadingTxt = script.Parent.Parent
            local WeOnOurWayDown = script.Parent.Parent.Parent.Parent.BackFrame
            wait(1.5)
            script.Parent:TweenSize(UDim2.new(0, 88,0, 26))
            script.Parent.Parent.Parent.LoadingText.Text = "Setting up.."
            TextLabel.Text = "Spectral 1/4"
            print("[1/4] Setting up Script")
            wait(1.5)
            script.Parent:TweenSize(UDim2.new(0, 165,0, 26))
            script.Parent.Parent.Parent.LoadingText.Text = "Bypassing Anticheats.."
            TextLabel.Text = "Spectral 2/4"
            print("[2/4] Bypassing Anticheat")
            wait(1.5)
            script.Parent:TweenSize(UDim2.new(0, 232,0, 26))
            script.Parent.Parent.Parent.LoadingText.Text = "Checking Whitelist.."
            TextLabel.Text = "Spectral 3/4"
            print("[3/4] Checking if Whitelisted")
            wait(1.5)
            script.Parent:TweenSize(UDim2.new(1,0,1,0))
            script.Parent.Parent.Parent.LoadingText.Text = "Loading Commands.."
            TextLabel.Text = "Spectral 4/4"
            wait(0.3)
            TextLabel.Text = "Spectral"
            print("[4/4] Executing ui in 2S")
                local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://1548304764"
        sound.Parent = game:GetService("SoundService")
        sound:Play()
            wait(1.5)
            WeOnOurWayDown:TweenPosition(UDim2.new(0.493, 0,1.07, 0))
            wait(1)
            script.Parent.Parent.Parent.Parent.Parent.SpectralLoader:Destroy()
        end
        coroutine.wrap(TFOQWM_fake_script)()
        local function DDIVBK_fake_script()
            local script = Instance.new('LocalScript', BackFrame)
        
            script.Parent:TweenPosition(UDim2.new(0.5, 0,0.499, 0))
        end
        coroutine.wrap(DDIVBK_fake_script)()
        wait(8)
local NotificationHolder = loadstring(game:HttpGet('https://raw.githubusercontent.com/EXFTB/UI/main/main/STX/Module.Lua'))()
local Notification = loadstring(game:HttpGet('https://raw.githubusercontent.com/EXFTB/UI-main/main/STX/Client.Lua'))()
Notification:Notify(
    {Title = 'Spectral', Description = 'Welcome, ' .. game.Players.LocalPlayer.DisplayName},
    {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
    {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
)

--//Variables\\--
local Player = game:GetService('Players').LocalPlayer
local Commands, Prefix = {}, ''
local ScreenGui = Instance.new('ScreenGui')
local Cmdbar = Instance.new('TextBox')
local UIGradient = Instance.new('UIGradient')

--//Properties for commandbar\\--
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild('PlayerGui')
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

Cmdbar.Name = 'Cmdbar'
Cmdbar.Parent = ScreenGui
Cmdbar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Cmdbar.BorderColor3 = Color3.fromRGB(0, 255, 238)
Cmdbar.BorderSizePixel = 5
Cmdbar.Position = UDim2.new(0, 0, 0.468795359, 0)
Cmdbar.Size = UDim2.new(1, 0, 0.053000, 0)
Cmdbar.Visible = false
Cmdbar.Font = Enum.Font.ArialBold
Cmdbar.PlaceholderColor3 = Color3.fromRGB(0, 0, 0)
Cmdbar.PlaceholderText = 'Command here'
Cmdbar.Text = ''
Cmdbar.TextColor3 = Color3.fromRGB(0, 0, 0)
Cmdbar.TextSize = 20.000
Cmdbar.TextStrokeColor3 = Color3.fromRGB(0, 255, 238)
Cmdbar.TextStrokeTransparency = 0.000

UIGradient.Parent = Cmdbar

local Uis = game:GetService('UserInputService')
Uis.InputBegan:Connect(
    function(Key, Typing)
        if Typing then
            return
        end
        if Key.KeyCode == Enum.KeyCode.Semicolon then
            Cmdbar.Visible = true
            Cmdbar.Text = ''
            wait()
            Cmdbar:CaptureFocus()
        Cmdbar:TweenSize(UDim2.new(1, 0, 0.053000, 0), 'Out', 'Quad', 0.4, true)
        end
    end
)
Cmdbar.FocusLost:Connect(
    function(Foc)
        if Foc then
            Cmdbar:TweenSize(UDim2.new(0, 0, 0, 0), 'Out', 'Quad', 0.4, true)
            wait()
            Cmdbar.Visible = false
            game:GetService('Players'):Chat(Prefix .. Cmdbar.Text)
        end
    end
)
Uis.InputEnded:Connect(
    function(Key)
        if Key.KeyCode.Name == 'LeftAlt' then
            Cmdbar.Visible = false
        end
    end
)

--//Obvious variables\\--

local Players = game:GetService('Players')
local RService = game:GetService('RunService')
local VUser = game:GetService('VirtualUser')
local SGui = game:GetService('StarterGui')
local TPService = game:GetService('TeleportService')
local Client = Players.LocalPlayer
local Mouse = Players.LocalPlayer:GetMouse()
local Camera = workspace.Camera
local CF = CFrame.new
local INew = Instance.new
local Vec3 = Vector3.new
local Vec2 = Vector2.new
local UD2 = UDim2.new
local UD = UDim.new

--//Settings\\--
local ChatSpy = false
local Noclip = true -- So that its disabled lol
local Esp = false
local Stompaura = false
local Godmode = false
local EspTarget = nil
local AFK = false
local AFKMessage = 'AFK !'
local TeleportTarget = nil
local Deathreturn = false
local Antiaim = false
local Desync = false
local BlinkSpeed = 4
local Blink = false
local Darkchat = false
local TrashTalk = false
local InfiniteJump = false
local KillTarget = nil
local AAResolver = false
local ReverseResolver = false
local RGBCharacter = false
local TPBypass = false
local TryhardAnimations = false
local Fly = false
local Airwalk = false
local FlingDesync = false
local BoxingStance = false
local FlingTarget = nil
local NoJumpCoolDown = true --Quick Execute
local AntiFall = false
local AimbotDot = false
local FistReach = false
local RandomTrashTalkQuotes = {
    "You legit suck 💀💀";
    "My dead cat has more lives than your score.";
    "My disabled goldfish does better!";
    "i'll 100-0 in my sleep.";
    "Your family tree must be a cactus because everyone on it is a prick.";
    "If I had a face like yours I'd sue my parents.";
    "Stupidity like bad aim's not a crime so you're free to go.";
    "You're not stupid you just have bad luck when thinking.";
    "If you really want to know about mistakes you should ask your parents how you came to life.";
    "You are proof that evolution can go in reverse";
    "I'm sorry I didn't get that, you gave up you said?";
    "Were you born this stupid, or did you take lessons?";
    "Hey you have something on your chin.. No.. Down abit, yes the 3rd one.";
    "You’re so dense that light bends around you.";
    "I fear no man, but your face... It scares me.";
    "Just buy Spectral already bro..";
    "You done yet?";
    "Given up sonny?";
    "Bro alright, how to get good aim? get a pillow, keep dreaming!";
}

--//Functions\\--
for _, a in pairs(game.Workspace:GetDescendants()) do
    if a:IsA('Seat') then
        a.Disabled = true
    end
end

function SearchPlayers(Name)
    local Inserted = {}
    for _, player in pairs(game:GetService('Players'):GetPlayers()) do
        if
            (string.sub(string.lower(player.Name), 1, string.len(Name))) == string.lower(Name) or
                (string.sub(string.lower(player.DisplayName), 1, string.len(Name))) == string.lower(Name)
         then
            table.insert(Inserted, player)
            return player
        end
    end
end

function GetInit(CName)
    for _, v in next, Commands do
        if v.Name == CName or table.find(v.Aliases, CName) then
            return v.Function
        end
    end
end

function RunCommand(Cmd)
    Cmd = string.lower(Cmd)
    pcall(
        function()
            if Cmd:sub(1, #Prefix) == Prefix then
                local Args = string.split(Cmd:sub(#Prefix + 1), ' ')
                local CmdName = GetInit(table.remove(Args, 1))
                if CmdName and Args then
                    return CmdName(Args)
                end
            end
        end
    )
end

local Settings = {
    BoxLock = {
        Enabled = true,
        BoxLockkey = 'q',
        PingAutoPrediction = false,
        Aimpart = 'UpperTorso',
        HitboxExtender = false,
        Highlight = true,
        Tracers = true,
        Notifications = true
    },
    Settings = {
        Thickness = 2.5,
        Transparency = 1,
        Color = Color3.fromRGB(0, 255, 238),
        FOV = true
    }
}

_G.Types = {
    Ball = Enum.PartType.Ball,
    Block = Enum.PartType.Block,
    Cylinder = Enum.PartType.Cylinder
}

local PlaceBox = Instance.new("Part", game.Workspace)
PlaceBox.Shape = _G.Types.Block
PlaceBox.Material = "Neon"
PlaceBox.Color = Color3.fromRGB(0, 255, 238)



spawn(
    function()
        PlaceBox.Anchored = true
        PlaceBox.CanCollide = false
        PlaceBox.Size = Vector3.new(11, 11, 11)
        PlaceBox.Transparency = 0.8
    end
)

local TargetHL = Instance.new("Highlight")
local ClientHL = Instance.new("Highlight")
local CurrentCamera = game:GetService('Workspace').CurrentCamera
local Inset = game:GetService('GuiService'):GetGuiInset().Y
local Mouse = game.Players.LocalPlayer:GetMouse()
local LocalPlayer = game.Players.LocalPlayer
local Line = Drawing.new('Line')
local Circle = Drawing.new('Circle')
local AimbotTarget

Mouse.KeyDown:Connect(function(KeyPressed)
    if KeyPressed == (Settings.BoxLock.BoxLockkey) then
        if Settings.BoxLock.Enabled == true then
            Settings.BoxLock.Enabled = false
            if Settings.BoxLock.Notifications == true then
                AimbotTarget = FindClosestPlayer()
                Notification:Notify(
                    {Title = 'Spectral', Description = 'Unlocked'},
                    {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
                    {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
                )
            end
        else
            AimbotTarget = FindClosestPlayer()
            Settings.BoxLock.Enabled = true
            if Settings.BoxLock.Notifications == true then
                Notification:Notify(
                    {Title = 'Spectral', Description = 'Locked on: ' .. tostring(AimbotTarget.Name) },
                    {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
                    {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
                )
            end
        end
    end
end)

function FindClosestPlayer()
    local ClosestDistance, ClosestPlayer = math.huge, nil;
    for _, Player in next, game:GetService('Players'):GetPlayers() do
        if Player ~= LocalPlayer then
            local Character = Player.Character
            if Character and Character.Humanoid.Health > 1 then 
                local Position, IsVisibleOnViewPort = CurrentCamera:WorldToViewportPoint(Character.HumanoidRootPart.Position)
                if IsVisibleOnViewPort then
                    local Distance = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(Position.X, Position.Y)).Magnitude
                    if Distance < ClosestDistance then
                        ClosestPlayer = Player
                        ClosestDistance = Distance
                    end
                end
            end
        end
    end
    return ClosestPlayer, ClosestDistance
end

RService.Heartbeat:connect(function()
    if Settings.BoxLock.Enabled == true and AimbotTarget ~= nil then
        local Vector = CurrentCamera:WorldToViewportPoint(AimbotTarget.Character[Settings.BoxLock.Aimpart].Position)
        local PredictedVector = CurrentCamera:WorldToViewportPoint(AimbotTarget.Character[Settings.BoxLock.Aimpart].Position + (AimbotTarget.Character[Settings.BoxLock.Aimpart].Velocity * getgenv().Prediction))
        Line.Color = Settings.Settings.Color
        Line.Transparency = Settings.Settings.Transparency
        Line.Thickness = Settings.Settings.Thickness
        Line.From = Vector2.new(CurrentCamera:WorldToViewportPoint(game.Players.LocalPlayer.Character.HumanoidRootPart.Position).X, CurrentCamera:WorldToViewportPoint(game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Y)
        Line.To = Vector2.new(Vector.X, Vector.Y)
        Line.Visible = true
        Circle.Position = Vector2.new(PredictedVector.X, PredictedVector.Y)
        Circle.Visible = true
        Circle.Thickness = 1.5
        Circle.Radius = 7.5
        Circle.Filled = true
        Circle.Color = Settings.Settings.Color
    elseif Settings.BoxLock.FOV == true then
        Circle.Visible = true
    else
        Circle.Visible = false
        Line.Visible = false
        TargetHL.Parent = game.CoreGui
        ClientHL.Parent = game.CoreGui
        PlaceBox.CFrame = CFrame.new(0, 9999, 0)
    end
end)
RService.Heartbeat:connect(function()
    if Settings.BoxLock.Enabled == true and AimbotTarget ~= nil then
    if Settings.BoxLock.HitboxExtender == true then
        PlaceBox.CFrame = CFrame.new(AimbotTarget.Character[Settings.BoxLock.Aimpart].Position + (AimbotTarget.Character[Settings.BoxLock.Aimpart].Velocity * getgenv().Prediction))
        elseif Settings.BoxLock.HitboxExtender == false then
            PlaceBox.CFrame = CFrame.new(0, 9999, 0)
        end
    end
end)

RService.Heartbeat:connect(function()
    if Settings.BoxLock.Enabled == true and AimbotTarget ~= nil then
    if Settings.BoxLock.Tracers == true then
        Settings.Settings.Transparency = 1
        elseif Settings.BoxLock.Tracers == false then
            Settings.Settings.Transparency = 0
        end
    end
end)

RService.Heartbeat:connect(function()
    if Settings.BoxLock.Enabled == true and AimbotTarget ~= nil then
    if Settings.BoxLock.Highlight == true then
        TargetHL.Parent = AimbotTarget.Character
        TargetHL.FillColor = Settings.Settings.Color
        TargetHL.OutlineColor = Settings.Settings.Color
        ClientHL.Parent = Client.Character
        ClientHL.OutlineColor = Settings.Settings.Color
        ClientHL.FillColor = Settings.Settings.Color
        elseif Settings.BoxLock.Highlight == false then
            TargetHL.Parent = game.CoreGui
            ClientHL.Parent = game.CoreGui
        end
    end
end)

LPH_NO_VIRTUALIZE(function() 

	local MetaTable = getrawmetatable(game)
	local Method = getnamecallmethod()
	local Old = MetaTable.__namecall
	setreadonly(MetaTable, false)
	MetaTable.__namecall = newcclosure(function(...)
		local args = {...}
		if Settings.BoxLock.Enabled and getnamecallmethod() == 'FireServer' and args[2] == 'MousePos' then
			if AimbotTarget.Character.Humanoid.Jump == true and AimbotTarget.Character.Humanoid.FloorMaterial == Enum.Material.Air
				then
					args[3] = AimbotTarget.Character["LeftUpperLeg"].Position + (AimbotTarget.Character["LeftUpperLeg"].Velocity * getgenv().Prediction)
					return Old(unpack(args))
				else
					args[3] = AimbotTarget.Character[Settings.BoxLock.Aimpart].Position + (AimbotTarget.Character[Settings.BoxLock.Aimpart].Velocity * getgenv().Prediction)
					return Old(unpack(args))
				end
		end
		return Old(...)
	end)
end)()


RService.Heartbeat:Connect(function()
if Settings.BoxLock.PingAutoPrediction then
    local PingValue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    local PingSplit = string.split(PingValue,'(')
    local RealPingValue = tonumber(PingSplit[1])
    if RealPingValue < 250 then
        getgenv().Prediction = 0.1711
    end
    if RealPingValue < 150 then
        getgenv().Prediction = 0.160
    end
    if RealPingValue < 130 then
        getgenv().Prediction = 0.151
    end
    if RealPingValue < 120 then
        getgenv().Prediction = 0.149
    end
    if RealPingValue < 110 then
        getgenv().Prediction = 0.146
    end
    if RealPingValue < 105 then
        getgenv().Prediction = 0.138
    end
    if RealPingValue < 90 then
        getgenv().Prediction = 0.136
    end
    if RealPingValue < 80 then
        getgenv().Prediction = 0.134
    end
    if RealPingValue < 70 then
        getgenv().Prediction = 0.131
    end
    if RealPingValue < 60 then
        getgenv().Predictionn = 0.1229
    end
    if RealPingValue < 50 then
        getgenv().Prediction = 0.1225
    end
    if RealPingValue < 40 then
        getgenv().Prediction = 0.1256
    end
    elseif ReverseResolver then
        getgenv().Prediction = -0.134 --YES NIGGA ITS THAT EASY
    else
        getgenv().Prediction = 0.12567724521
    end
end)

--//Functions
function ToggleAimbotDot()
AimbotDot = not AimbotDot
Notification:Notify(
        {Title = 'Spectral', Description = 'Aimbot Prediction Dot: ' .. tostring(AimbotDot)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
)
end
local Dot = Drawing.new('Circle')

RService.Heartbeat:Connect(function()
    if AimbotDot then
        local PredictedVector = CurrentCamera:WorldToViewportPoint(Client.Character.HumanoidRootPart.Position + (Client.Character.HumanoidRootPart.Velocity * getgenv().Prediction))
        Dot.Position = Vector2.new(PredictedVector.X, PredictedVector.Y)
        Dot.Visible = true
        Dot.Thickness = 1.5
        Dot.Radius = 7.5
        Dot.Filled = true
        Dot.Color = Settings.Settings.Color
    else
        Dot.Visible = false
    end
end)

function ToggleChatSpy()
    ChatSpy = not ChatSpy


    local ChatSpyFrame = Client.PlayerGui.Chat.Frame
    if ChatSpy then
    ChatSpyFrame.ChatChannelParentFrame.Visible = true
    ChatSpyFrame.ChatBarParentFrame.Position = ChatSpyFrame.ChatChannelParentFrame.Position + UD2(UD(), ChatSpyFrame.ChatChannelParentFrame.Size.Y)
    else
        ChatSpyFrame.ChatChannelParentFrame.Visible = false
    end
end

function RespawnCharacter()
     local Player = game.Players.LocalPlayer
    local Character = Player.Character
    local Humanoid = Character.Humanoid
    function GetChar()
        return Character or CharacterAdded:Wait()
    end
    local Char = Character
    Player.Character = nil
    local Char = GetChar()
    Player.Character = Char
    wait(game.Players.RespawnTime - 0.3) -- More Controllable
    Humanoid.Health = 0
end

function ConfirmCallbacks()
    wait()
    SGui:SetCore('ResetButtonCallback', true)
end
ConfirmCallbacks()

function ResetCharacter()
    if Client and Client.Character and Client.Character:FindFirstChild('Humanoid') then
        Client.Character.Humanoid:ChangeState(15)
    end
end
function EspPlayer(Dude)
    local bgui = Instance.new('BillboardGui', Dude.Character.Head)
    local tlabel = Instance.new('TextLabel', bgui)

    bgui.Name = 'ESP'
    bgui.Adornee = nil
    bgui.AlwaysOnTop = true
    bgui.ExtentsOffset = Vector3.new(0, 3, 0)
    bgui.Size = UDim2.new(0, 5, 0, 5)
    bgui.ResetOnSpawn = false

    tlabel.Name = 'espTarget'
    tlabel.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
    tlabel.BackgroundTransparency = 1
    tlabel.BorderSizePixel = 0
    tlabel.Position = UDim2.new(0, 0, 0, -30)
    tlabel.Size = UDim2.new(1, 0, 7, 0)
    tlabel.Visible = true
    tlabel.ZIndex = 10
    tlabel.Font = 'ArialBold'
    tlabel.FontSize = 'Size18'
    tlabel.TextColor3 = Color3.fromRGB(0, 255, 238)
    tlabel.TextStrokeTransparency = 0
    RService.RenderStepped:Connect(
        function()
            if Dude and Dude.Character and Dude.Character:FindFirstChildOfClass('Humanoid') then
                tlabel.Text =
                    Dude.Name ..
                    ' [' ..
                        math.floor(Dude.Character.Humanoid.Health) ..
                            '/' ..
                                math.floor(Dude.Character.Humanoid.MaxHealth) ..
                                    ']' ..
                                        ' [' ..
                                            math.floor(Dude:DistanceFromCharacter(Client.Character.Head.Position)) ..
                                                ']'
            end
        end
    )
end

function ToggleFling()
    FlingDesync = not FlingDesync
    Notification:Notify(
        {Title = 'Spectral', Description = 'FlingDesync: ' .. tostring(FlingDesync)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
end
checkcaller = checkcaller
newcclosure = newcclosure
hookmetamethod = hookmetamethod
        
function RandomNumberRange(a)
    return math.random(-a * 100, a * 100) / 100
end

function RandomVectorRange(a, b, c)
    return Vector3.new(RandomNumberRange(a), RandomNumberRange(b), RandomNumberRange(c))
end

local FlingDesyncTypes = {}
RService.Heartbeat:Connect(function()
    if FlingDesync == true then
        FlingDesyncTypes[1] = Client.Character.HumanoidRootPart.CFrame
        FlingDesyncTypes[2] = Client.Character.HumanoidRootPart.AssemblyAngularVelocity

        local SpoofThis = Client.Character.HumanoidRootPart.CFrame

        SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
        SpoofThis = SpoofThis * CFrame.Angles(math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)))

        Client.Character.HumanoidRootPart.CFrame = SpoofThis

        Client.Character.HumanoidRootPart.AssemblyAngularVelocity = Vector3.new(1, 1, 1) * -3000

        RService.RenderStepped:Wait()

        Client.Character.HumanoidRootPart.CFrame = FlingDesyncTypes[1]
        Client.Character.HumanoidRootPart.AssemblyAngularVelocity = FlingDesyncTypes[2]
    end
end)
LPH_NO_VIRTUALIZE(function()
local hook = nil
hook = hookmetamethod(game, "__index", newcclosure(function(self, key)
    if enable == true then
        if not checkcaller() then
            if key == "CFrame" and enable == true and Client.Character and Client.Character:FindFirstChild("HumanoidRootPart") and Client.Character:FindFirstChild("Humanoid") and Client.Character:FindFirstChild("Humanoid").Health > 0 then
                if self == Client.Character.HumanoidRootPart then
                    return FlingDesyncTypes[1] or CFrame.new()
                elseif self == Client.Character.Torso then
                    return FlingDesyncTypes[1] or CFrame.new()
                end
            end
        end
    end
    return hook(self, key)
end))
end)

function ToggleDesync()
    Desync = not Desync
    Notification:Notify(
        {Title = 'Spectral', Description = 'Desync: ' .. tostring(Desync)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
end
checkcaller = checkcaller
newcclosure = newcclosure
hookmetamethod = hookmetamethod
        
function RandomNumberRange(a)
    return math.random(-a * 100, a * 100) / 100
end

function RandomVectorRange(a, b, c)
    return Vector3.new(RandomNumberRange(a), RandomNumberRange(b), RandomNumberRange(c))
end

local DesyncTypes = {}
RService.Heartbeat:Connect(function()
    if Desync == true then
        DesyncTypes[1] = Client.Character.HumanoidRootPart.CFrame
        DesyncTypes[2] = Client.Character.HumanoidRootPart.Velocity

        local SpoofThis = Client.Character.HumanoidRootPart.CFrame

        SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
        SpoofThis = SpoofThis * CFrame.Angles(math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)))

        Client.Character.HumanoidRootPart.CFrame = SpoofThis

        Client.Character.HumanoidRootPart.Velocity = Vector3.new(1, 1, 1) * -3000

        RService.RenderStepped:Wait()

        Client.Character.HumanoidRootPart.CFrame = DesyncTypes[1]
        Client.Character.HumanoidRootPart.Velocity = DesyncTypes[2]
    end
end)

LPH_NO_VIRTUALIZE(function()
local hook = nil
hook = hookmetamethod(game, "__index", newcclosure(function(self, key)
    if enable == true then
        if not checkcaller() then
            if key == "CFrame" and enable == true and Client.Character and Client.Character:FindFirstChild("HumanoidRootPart") and Client.Character:FindFirstChild("Humanoid") and Client.Character:FindFirstChild("Humanoid").Health > 0 then
                if self == Client.Character.HumanoidRootPart then
                    return DesyncTypes[1] or CFrame.new()
                elseif self == Client.Character.Torso then
                    return DesyncTypes[1] or CFrame.new()
                end
            end
        end
    end
    return hook(self, key)
end))
end)

function ToggleDeathReturn()
    Deathreturn = not Deathreturn
    Notification:Notify(
        {Title = 'Spectral', Description = 'Deathreturn: ' .. tostring(Deathreturn)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {
            Image = 'http://www.roblox.com/asset/?id=8871030627',
            ImageColor = Color3.new(0, 255, 238)
        }
    )

    local NeedsRespawn = false
    local HasPiviot = false
    local DeathReturnPosition = CFrame.new()

    RService.Stepped:connect(
        function()
            if Deathreturn == true and game.Players.LocalPlayer.Character.Humanoid.Health == 0 then
                if HasPiviot == false then
                    DeathReturnPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    HasPiviot = true
                end
                NeedsRespawn = true
            end

            if NeedsRespawn then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = DeathReturnPosition
            end
        end
    )

    game.Players.LocalPlayer.CharacterAdded:connect(
        function()
            wait(0.6)
            NeedsRespawn = false
            HasPiviot = false
        end
    )
end

function ToggleRGBCharacter()
    RGBCharacter = not RGBCharacter
    Notification:Notify(
        {Title = 'Spectral', Description = 'RGB Character: ' .. tostring(RGBCharacter)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
end
function rainbow(a,b,c)
    local time = a
    local h = tick() % time / time
    local co = Color3.fromHSV(h, 1, 1)
        for i,v in pairs(b:GetChildren()) do
            if v:IsA(c) or v:FindFirstChild(c) then
                v.Color = co
                v.Material = 'ForceField'    
            end
        end
    end

RService.Heartbeat:Connect(function()
    if RGBCharacter then
        rainbow(5,game:GetService('Players').LocalPlayer.Character,'BasePart')
    end
end)


function ToggleBoxingStance()
    BoxingStance = not BoxingStance
    Notification:Notify(
        {Title = 'Spectral', Description = 'Boxing Stance: ' .. tostring(BoxingStance)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
end
RService.Heartbeat:Connect(function()
    if BoxingStance then
        local Fist = game.Players.LocalPlayer.Character:FindFirstChild('Fist')
        local Boxing = Fist:FindFirstChild('Boxing')
        Boxing.Value = BoxingStance
    end
end)




function GetRPG()
local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
    if not TPBypass then
        TPBypass = true
    end
    wait(0.2)
    Client.Character.HumanoidRootPart.CFrame = CFrame.new(131, 281, -105)
    local Mouse = game.Players.LocalPlayer:GetMouse()
    local FireClick = fireclickdetector or false
    local Path = game:GetService("Workspace").Ignored.Shop.Guns["[RPG] - $6000"]
    local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
    FireClick(ClickDetector, 0)
    wait(PressDelay)
    wait(0.2)
    local Mouse = game.Players.LocalPlayer:GetMouse()
    local FireClick = fireclickdetector or false
    local Path = game:GetService("Workspace").Ignored.Shop.Guns["[RPG] - $6000"]
    local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
    FireClick(ClickDetector, 0)
    Client.Character.HumanoidRootPart.CFrame = ReturnPosition
    wait(0.4)
    if TPBypass then
        TPBypass = false
    end
end

function GetLMG()
    local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
            if not TPBypass then
                TPBypass = true
            end
            wait(0.2)
            Client.Character.HumanoidRootPart.CFrame = CFrame.new(-594, 332, -101)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[LMG] - $4250"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            wait(PressDelay)
            wait(0.2)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[LMG] - $4250"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            Client.Character.HumanoidRootPart.CFrame = ReturnPosition
            wait(0.4)
            if TPBypass then
                TPBypass = false
    end
end

function GetPopcorn()
    local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
            if not TPBypass then
                TPBypass = true
            end
            wait(0.2)
            Client.Character.HumanoidRootPart.CFrame = CFrame.new(-968, 334, 51)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Others["[Popcorn] - $3"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            wait(PressDelay)
            wait(0.2)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Others["[Popcorn] - $3"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            Client.Character.HumanoidRootPart.CFrame = ReturnPosition
            wait(0.4)
            if TPBypass then
                TPBypass = false
    end
end

function GetRevolver()
    local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
            if not TPBypass then
                TPBypass = true
            end
            wait(0.2)
            Client.Character.HumanoidRootPart.CFrame = CFrame.new(-615, 331, 84)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[Revolver] - $1600"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            wait(PressDelay)
            wait(0.2)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[Revolver] - $1600"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            Client.Character.HumanoidRootPart.CFrame = ReturnPosition
            wait(0.4)
            if TPBypass then
                TPBypass = false
    end
end

function GetMask()
    local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
            if not TPBypass then
                TPBypass = true
            end
            wait(0.2)
            Client.Character.HumanoidRootPart.CFrame = CFrame.new(-246, 331, -79)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Others["[Mask] - $25"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            wait(PressDelay)
            wait(0.2)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Others["[Mask] - $25"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            Client.Character.HumanoidRootPart.CFrame = ReturnPosition
            wait(0.4)
            if TPBypass then
                TPBypass = false
    end
end


function GetDoubleBarrel()
    local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
            if not TPBypass then
                TPBypass = true
            end
            wait(0.2)
            Client.Character.HumanoidRootPart.CFrame = CFrame.new(-1014, 331, -53)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[Double Barrel SG] - $800"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            wait(PressDelay)
            wait(0.2)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[Double Barrel SG] - $800"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            Client.Character.HumanoidRootPart.CFrame = ReturnPosition
            wait(0.4)
            if TPBypass then
                TPBypass = false
    end
end

function GetUmp()
    local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
            if not TPBypass then
                TPBypass = true
            end
            wait(0.2)
            Client.Character.HumanoidRootPart.CFrame = CFrame.new(-568, 317, -533)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[UMP] - $1100"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            wait(PressDelay)
            wait(0.2)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Guns["[UMP] - $1100"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            Client.Character.HumanoidRootPart.CFrame = ReturnPosition
            wait(0.4)
            if TPBypass then
                TPBypass = false
    end
end

function GetArmor()
    local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
            if not TPBypass then
                TPBypass = true
            end
            wait(0.2)
            Client.Character.HumanoidRootPart.CFrame = CFrame.new(-1227, 337, -514)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Armor["[High Armor] - $550"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            wait(PressDelay)
            wait(0.2)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local FireClick = fireclickdetector or false
            local Path = game:GetService("Workspace").Ignored.Shop.Armor["[High Armor] - $550"]
            local ClickDetector = Path:FindFirstChildOfClass("ClickDetector", true) or Path.Parent:FindFirstChildOfClass("ClickDetector") or Path:FindFirstAncestorOfClass("ClickDetector")
            FireClick(ClickDetector, 0)
            Client.Character.HumanoidRootPart.CFrame = ReturnPosition
            wait(0.4)
            if TPBypass then
                TPBypass = false
    end
end

function ToggleTryhardAnimations()
    TryhardAnimations = not TryhardAnimations
    Notification:Notify(
        {Title = 'Spectral', Description = 'Tryhard Animations: ' .. tostring(TryhardAnimations)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
    RService.Heartbeat:Connect(function()
        if TryhardAnimations then
            local Animate = game.Players.LocalPlayer.Character.Animate
            Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
            Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782841498"
            Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616168032"
            Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
            Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
            Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083439238"
            Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
            game.Players.LocalPlayer.Character.Humanoid.Jump = false
            wait(1)
        end
    end)
end

--messy shit (not mine lol)--
function ToggleFly()
    Fly = not Fly
    Notification:Notify(
        {Title = 'Spectral', Description = 'Fly: ' .. tostring(Fly)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )

end
if game.Workspace:FindFirstChild("Core") then
    game.Workspace.Core:Destroy()
end

local Core = Instance.new("Part")
Core.Name = "Core"
Core.Size = Vector3.new(0.05, 0.05, 0.05)

spawn(
    function()
        Core.Parent = game.Workspace
        local Weld = Instance.new("Weld", Core)
        Weld.Part0 = Core
        Weld.Part1 = Client.Character.LowerTorso
        Weld.C0 = CFrame.new(0, 0, 0)
    end
)

game.Workspace:WaitForChild("Core")

local torso = game.Workspace.Core
local speed = 35
local keys = {a = false, d = false, w = false, s = false}
local e1
local e2
local function StartFly()
    local pos = Instance.new("BodyPosition", torso)
    local gyro = Instance.new("BodyGyro", torso)
    pos.Name = "EPIXPOS"
    pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
    pos.position = torso.Position
    gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    gyro.cframe = torso.CFrame
    repeat
        wait()
        Client.Character.Humanoid.PlatformStand = true
        local new = gyro.cframe - gyro.cframe.p + pos.position
        if not keys.w and not keys.s and not keys.a and not keys.d then
            speed = 5
        end
        if keys.w then
            new = new + game.Workspace.CurrentCamera.CoordinateFrame.lookVector * speed
            speed = speed + 0
        end
        if keys.s then
            new = new - game.Workspace.CurrentCamera.CoordinateFrame.lookVector * speed
            speed = speed + 0
        end
        if keys.d then
            new = new * CFrame.new(speed, 0, 0)
            speed = speed + 0
        end
        if keys.a then
            new = new * CFrame.new(-speed, 0, 0)
            speed = speed + 0
        end
        if speed > 10 then
            speed = 5
        end
        pos.position = new.p
        if keys.w then
            gyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
        elseif keys.s then
            gyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
        else
            gyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame
        end
    until Fly == false
    if gyro then
        gyro:Destroy()
    end
    if pos then
        pos:Destroy()
    end
    Fly = false
    Client.Character.Humanoid.PlatformStand = false
    speed = 10
end
e1 =
    Mouse.KeyDown:connect(
    function(key)
        if not torso or not torso.Parent then
            Fly = false
            e1:disconnect()
            e2:disconnect()
            return
        end
        if key == "w" then
            keys.w = true
        elseif key == "s" then
            keys.s = true
        elseif key == "a" then
            keys.a = true
        elseif key == "d" then
            keys.d = true
        elseif key == "f" then
            if Fly == true then
                Fly = false
            else
                Fly = true
                StartFly()
            end
        end
    end
)
e2 =
    Mouse.KeyUp:connect(
    function(key)
        if key == "w" then
            keys.w = false
        elseif key == "s" then
            keys.s = false
        elseif key == "a" then
            keys.a = false
        elseif key == "d" then
            keys.d = false
        end
    end
)
StartFly()
--end of messy shit--



function ToggleBlink()
    Blink = not Blink
    Notification:Notify(
        {Title = 'Spectral', Description = 'Blink: ' .. tostring(Blink)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
    local BlinkSpeed
    end
    RService.Heartbeat:Connect(function()
        if Blink then
        Client.Character.HumanoidRootPart.CFrame = Client.Character.HumanoidRootPart.CFrame + Vector3.new(Client.Character.Humanoid.MoveDirection.X * BlinkSpeed, Client.Character.Humanoid.MoveDirection.Y * BlinkSpeed, Client.Character.Humanoid.MoveDirection.Z * BlinkSpeed)
        end
    end)
    Uis.InputBegan:Connect(function(Input, Chat)
        if Chat then
            return 
        end
        if Input.KeyCode == Enum.KeyCode.C then
            Blink = not Blink
        end
    end)

function ToggleInfiniteJump()
    InfiniteJump = not InfiniteJump
    Notification:Notify(
        {Title = 'Spectral', Description = 'Infinite Jump: ' .. tostring(InfiniteJump)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
end
local Holding = false
Uis.InputBegan:Connect(function(Input, Chat)
    if Chat then
        return 
    end
    if Input.KeyCode == Enum.KeyCode.Space and InfiniteJump then
        Holding = true
        while Holding == true do
            wait()
            Client.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Seated)
            wait(0.0001)
            Client.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)
Uis.InputEnded:Connect(function(Input, Chat)
    if Chat then
        return 
    end
    if Input.KeyCode == Enum.KeyCode.Space then
        Holding = false
    end
end)

function ToggleDarkChat()
    Darkchat = not Darkchat
    Notification:Notify(
        {Title = 'Spectral', Description = 'Darkchat: ' .. tostring(Darkchat)},
        {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
        {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
    if Darkchat then
        game:GetService("Players").LocalPlayer.Information.DarkChat.Value = true
    elseif not Darkchat then
        game:GetService("Players").LocalPlayer.Information.DarkChat.Value = false
    end
end

function ToggleStompAura()
    Stompaura = not Stompaura
    Notification:Notify(
            {Title = 'Spectral', Description = 'Stompaura: ' .. tostring(Stompaura)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
    if Stompaura then
        TPBypass = true
    else
        TPBypass = false
    end
RService.Heartbeat:Connect(function()
    if Stompaura then
        for i, v in pairs(game:GetService('Players'):GetPlayers()) do
            if v.Character then
                if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude < 35 and v.Character.I_LOADED_I['K.O'].Value == true and not v.Character:FindFirstChild('DEBUG_DEAD') and not v.Character:FindFirstChild('WELD_GRAB') then
                if not TPBypass then    
                    TPBypass = true
                end
                wait(0.2)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.Head.CFrame
                wait(0.2)
                if TPBypass then
                    TPBypass = false
                end
                    game:GetService('ReplicatedStorage').MainRemote:FireServer('Stomp')
                    end
                end
            end
        end
    end)

    function ToggleFistReach()
        FistReach = not FistReach
        Notification:Notify(
            {Title = 'Spectral', Description = 'Fist Reach: '..tostring(FistReach)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        end

        RService.Heartbeat:Connect(function()
            for i,v in pairs(game:GetService('Players'):GetPlayers()) do
                if v ~= Client and (Client.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude < 50 and FistReach then
                    firetouchinterest(Client.Character['LeftHand'], v.Character.UpperTorso, 0)
                    firetouchinterest(Client.Character['RightHand'], v.Character.UpperTorso, 0)
            end
        end
    end)


function ToggleResolver()
    AAResolver = not AAResolver
    Notification:Notify(
            {Title = 'Spectral', Description = 'Resolver: ' .. tostring(AAResolver)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
end
RService.Heartbeat:Connect(function()
    pcall(function()
        for i,v in pairs(game.Players:GetChildren()) do
            if v ~= Client and AAResolver then
                local hrp = v.Character.HumanoidRootPart
                 hrp.Velocity = Vector3.new(0, 0, 0)    
                 hrp.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                 hrp.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
            end
        end
    end)
 end)

function ToggleAntiAim()
        Antiaim = not Antiaim
        Notification:Notify(
            {Title = 'Spectral', Description = 'Antiaim: ' .. tostring(Antiaim)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
    checkcaller = checkcaller
    newcclosure = newcclosure
    hookmetamethod = hookmetamethod
        
        
    function RandomNumberRange(a)
        return math.random(-a * 100, a * 100) / 100
    end
        
    function RandomVectorRange(a, b, c)
        return Vector3.new(RandomNumberRange(a), RandomNumberRange(b), RandomNumberRange(c))
    end
        
        
    local AATypes = {}
    RService.Heartbeat:Connect(function()
        if Antiaim == true then
            AATypes[1] = Client.Character.HumanoidRootPart.CFrame
            AATypes[2] = Client.Character.HumanoidRootPart.AssemblyLinearVelocity
        
            local SpoofThis = Client.Character.HumanoidRootPart.CFrame
        
            SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
            SpoofThis = SpoofThis * CFrame.Angles(math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)))
        
            Client.Character.HumanoidRootPart.CFrame = SpoofThis
            Client.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(AATypes[2].X, -600, AATypes[2].Y)
        
            RService.RenderStepped:Wait()
        
            Client.Character.HumanoidRootPart.CFrame = AATypes[1]
            Client.Character.HumanoidRootPart.AssemblyLinearVelocity = AATypes[2]
        end
    end)

LPH_NO_VIRTUALIZE(function()
    local hook = nil
    hook = hookmetamethod(game, "__index", newcclosure(function(self, key)
        if enable == true then
            if not checkcaller() then
                if key == "CFrame" and enable == true and Client.Character and Client.Character:FindFirstChild("HumanoidRootPart") and Client.Character:FindFirstChild("Humanoid") and Client.Character:FindFirstChild("Humanoid").Health > 0 then
                    if self == Client.Character.HumanoidRootPart then
                        return AATypes[1] or CFrame.new()
                    elseif self == Client.Character.Torso then
                        return AATypes[1] or CFrame.new()
                    end
                end
            end
        end
        return hook(self, key)
    end))
end)

    function ToggleTpBypass()
        TPBypass = not TPBypass
        Notification:Notify(
            {Title = 'Spectral', Description = 'TPBypass: ' .. tostring(TPBypass)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
        
        checkcaller = checkcaller
        newcclosure = newcclosure
        hookmetamethod = hookmetamethod
        function RandomNumberRange(a)
            return math.random(-a * 100, a * 100) / 100
        end
        function RandomVectorRange(a, b, c)
            return Vector3.new(RandomNumberRange(a), RandomNumberRange(b), RandomNumberRange(c))
        end
        local BypassTypes = {}
        RService.Heartbeat:Connect(function()
            if TPBypass == true then
                BypassTypes[1] = Client.Character.HumanoidRootPart.CFrame
                BypassTypes[2] = Client.Character.HumanoidRootPart.AssemblyLinearVelocity
        
                local SpoofThis = Client.Character.HumanoidRootPart.CFrame
            
                SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
                SpoofThis = SpoofThis * CFrame.Angles(math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)), math.rad(RandomNumberRange(0.1)))
            
                Client.Character.HumanoidRootPart.CFrame = SpoofThis
    
                Client.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(BypassTypes[2], -90, BypassTypes[2])
            
                RService.RenderStepped:Wait()
            
                Client.Character.HumanoidRootPart.CFrame = BypassTypes[1]
                Client.Character.HumanoidRootPart.AssemblyLinearVelocity = BypassTypes[2]
            end
        end)
            
	LPH_NO_VIRTUALIZE(function()
        local hook = nil
        hook = hookmetamethod(game, "__index", newcclosure(function(self, key)
            if enable == true then
                if not checkcaller() then
                    if key == "CFrame" and enable == true and Client.Character and Client.Character:FindFirstChild("HumanoidRootPart") and Client.Character:FindFirstChild("Humanoid") and Client.Character:FindFirstChild("Humanoid").Health > 0 then
                        if self == Client.Character.HumanoidRootPart then
                            return BypassTypes[1] or CFrame.new()
                        elseif self == Client.Character.Torso then
                            return BypassTypes[1] or CFrame.new()
                        end
                    end
                end
             end
            return hook(self, key)
        end))
	end)

function ToggleAirwalk()
    Airwalk = not Airwalk
    Notification:Notify(
            {Title = 'Spectral', Description = 'Airwalk: ' .. tostring(Airwalk)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
    )
    local AirwalkOffset = CFrame.new(0, -3.5, 0)

    local Air = Instance.new('Part', workspace)
    Air.Anchored = true
    Air.Size = Vector3.new(4, 1, 4)
    Air.Transparency = 1
    Air.Material = "ForceField"
    Air.Color = Color3.fromRGB(0, 255, 238)
    local AirWalkStrafePart = Instance.new("MeshPart")
    AirWalkStrafePart.MeshId = "rbxassetid://3726303797"
    AirWalkStrafePart.CanCollide = false
    AirWalkStrafePart.Anchored = true
    AirWalkStrafePart.Material = Enum.Material.Neon
    AirWalkStrafePart.Size = Vector3.new(3.5, 3.5, 3.5)
    AirWalkStrafePart.Color = Color3.fromRGB(0, 255, 238)
    AirWalkStrafePart.Parent = game.Workspace

while Airwalk do
    if Blink then
        SelectedVel = 2.6
    else
        SelectedVel = 15
    end
        AirWalkStrafePart.CFrame = Client.Character.HumanoidRootPart.CFrame * AirwalkOffset + Client.Character.HumanoidRootPart.Velocity / SelectedVel
        Air.CFrame = Client.Character.HumanoidRootPart.CFrame * AirwalkOffset
        wait()
    end
    AirWalkStrafePart:Destroy()
    Air:Destroy()
end

Uis.InputBegan:Connect(
    function(i, chat)
        if chat then
            return
        end
        if i.KeyCode == Enum.KeyCode.B then
            ToggleAirwalk()
        elseif i.KeyCode == Enum.KeyCode.LeftControl then
            AirwalkOffset = CFrame.new(0, -4, 0)
        end
    end
)

Uis.InputEnded:Connect(
    function(i, chat)
        if chat then
            return
        end
        if i.KeyCode == Enum.KeyCode.LeftControl then
            AirwalkOffset = CFrame.new(0, -3.5, 0)
        end
    end
)

-- Hooks
local IsA = game.IsA;
local newindex = nil


newindex = hookmetamethod(game, "__newindex", function(self, Index, Value)
   if not checkcaller() and IsA(self, "Humanoid") and Index == "JumpPower" and NoJumpCoolDown then
       return
   end
   
   return newindex(self, Index, Value);
end)

function StateChangedEvent(T, Changed)
    if AntiFall then
        if Client and Client.Character and Client.Character:FindFirstChildOfClass"Humanoid" then
            if Changed == Enum.HumanoidStateType.FallingDown or Changed == Enum.HumanoidStateType.PlatformStanding then
                Client.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Running);Client.Character.Humanoid.PlatformStand = false
            end
        end
    end
 end
 Client.Character:WaitForChild"Humanoid".StateChanged:Connect(StateChangedEvent)
 
 function CharacterAddedEvent()
    Client.Character:WaitForChild"Humanoid";
    Client.Character.Humanoid.StateChanged:Connect(StateChangedEvent)
 end
 Client.CharacterAdded:Connect(CharacterAddedEvent)
 
Client.Character.Humanoid.Died:Connect(function()
    TPBypass = false
    FlingDesync = false
end)

--//Commands\\--


Commands['Toggles Infinite Jump'] = {
    ['Aliases'] = {'infinitejump', 'infjump', 'ij'},
    ['Function'] = function(Args)
        ToggleInfiniteJump()
    end
}

Commands['Goto User'] = {
    ['Aliases'] = {'to', 'goto'},
    ['Function'] = function(Args)
        local TeleportTarget = nil
        if Args[1] then
            TeleportTarget = SearchPlayers(Args[1])
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: ' .. tostring(TeleportTarget)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )

        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
        if TeleportTarget ~= nil then
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = TeleportTarget.Character.HumanoidRootPart.CFrame
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
    end
}

Commands['Teleports To Bank'] = {
    ['Aliases'] = {'tobank', 'gotobank'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Bank'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-422, 349, -82)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To Casino'] = {
    ['Aliases'] = {'tocasino', 'gotocasino'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Casino'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-838, 331, 41)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To GunShop'] = {
    ['Aliases'] = {'togunshop', 'gotogunshop'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Gun shop'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-559, 317, -533)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To School'] = {
    ['Aliases'] = {'toschool', 'gotoschool'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: School'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-571, 330, 418)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To gym'] = {
    ['Aliases'] = {'togym', 'gotogym'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: gym'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-57, 332, -408)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To Island'] = {
    ['Aliases'] = {'gotoisland', 'toisland'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Medic Island'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-95, 401, 862)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To Bank Island'] = {
    ['Aliases'] = {'gotoisland2', 'toisland2'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Bank Island'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(1043, 415, -21)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To Motel'] = {
    ['Aliases'] = {'gotomotel', 'tomotel'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Motel'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-1198, 343, -369)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['Teleports To Boxing Club'] = {
    ['Aliases'] = {'gotoboxing', 'toboxing'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Boxing Club'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(-209, 331, -916)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}


Commands['Teleports To Boat'] = {
    ['Aliases'] = {'gotoboat', 'toboat'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Teleported to: Boat'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local TeleportSound = Instance.new("Sound")
        TeleportSound.Name = "TPSound"
        TeleportSound.SoundId = "http://www.roblox.com/asset/?id=9758530498"
        TeleportSound.Volume = 2
        TeleportSound.Looped = false
        TeleportSound.archivable = false
        TeleportSound.Parent = game.Workspace
                if not TPBypass then
                    TPBypass = true
                end
                wait(0.2)
                TeleportSound:play()
                Client.Character.HumanoidRootPart.CFrame = CFrame.new(137, 335, 268)
                wait(0.2)
                if TPBypass then
                    TPBypass = false
            end
        end
}

Commands['God Mode'] = {
    ['Aliases'] = {'god', 'godmode'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Godmode: true'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        Godmode = true 
        Client.Character:FindFirstChildOfClass('Humanoid').Health = 0
        local spoof = Client.CharacterAdded:Wait()
        repeat wait() until Client.Character:FindFirstChild("HumanoidRootPart")
        task.wait(0.1)
        game.Players.LocalPlayer.Character["I_LOADED_I"]["K.O"].Parent = nil
        game.Players.LocalPlayer.Character["I_LOADED_I"]["K.O"].Parent = nil
    end
}

Commands['Un God Mode'] = {
    ['Aliases'] = {'ungod', 'ungodmode'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Godmode: false'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        Godmode = false
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character.Humanoid
        function GetChar()
            return Character or CharacterAdded:Wait()
        end
        local Char = Character
        Player.Character = nil
        local Char = GetChar()
        Player.Character = Char
        wait(game.Players.RespawnTime - 0.3) -- More Controllable
        Humanoid.Health = 0
    end
}

Commands['Toggles Boxing Stance'] = {
    ['Aliases'] = {'boxingstance', 'boxing'},
    ['Function'] = function(Args)
        ToggleBoxingStance()
    end
}

Commands['Tool Reach'] = {
    ['Aliases'] = {'toolreach', 'reach'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Reach: true'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        if Client.Character:FindFirstChildWhichIsA('Tool') then
            Client.Character:FindFirstChildWhichIsA('Tool').Handle.Size = Vector3.new(130, 130, 130)
            Client.Character:FindFirstChildWhichIsA('Tool').Handle.Transparency = 1
        end
    end
}

Commands['UnTool Reach'] = {
    ['Aliases'] = {'untoolreach', 'unreach'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Reach: false'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        local Tool = Client.Character:FindFirstChildOfClass("Tool")
        if Tool ~= nil and not Tool:FindFirstChild("Ammo") and Tool:FindFirstChild("Handle") then
            if Tool.Handle.Transparency == 1 then
                if Tool.Name == "[Knife]" then
                    Tool.Handle.Size = Vector3.new(2.19574, 0.449288, 0.102495)
                end
                if Tool.Name == "[Bat]" then
                    Tool.Handle.Size = Vector3.new(0.559523, 4.68133, 0.559523)
                end
                if Tool.Name == "[Pencil]" then
                    Tool.Handle.Size = Vector3.new(0.375586, 1.9, 0.375587)
                end
                if Tool.Name == "[Pitchfork]" then
                    Tool.Handle.Size = Vector3.new(1.0553, 5.86135, 0.316619)
                end
                if Tool.Name == "[Shovel]" then
                    Tool.Handle.Size = Vector3.new(1.68383, 5.903, 0.337731)
                end
                Tool.Handle.Transparency = 0
            end
        end
    end
}

Commands['Fist Reach'] = {
    ['Aliases'] = {'fistreach', 'freach'},
    ['Function'] = function(Args)
        ToggleFistReach()
    end
}

Commands['Toggles Antiaimbot'] = {
    ['Aliases'] = {'antiaim', 'aa'},
    ['Function'] = function(Args)
        ToggleAntiAim()
    end
}

Commands['Toggles ChatSpy'] = {
    ['Aliases'] = {'chatspy', 'cs'},
    ['Function'] = function(Args)
        ToggleChatSpy()
    end
}

Commands['Toggles RGB Character'] = {
    ['Aliases'] = {'rgbcharacter', 'rgbchar', 'rgb'},
    ['Function'] = function(Args)
        ToggleRGBCharacter()
    end
}

Commands['Toggles TRYHARD Animations'] = {
    ['Aliases'] = {'tryhard', 'tryhardanims', 'anims'},
    ['Function'] = function(Args)
        ToggleTryhardAnimations()
    end
}

Commands['Toggles TrashTalk'] = {
    ['Aliases'] = {'tt', 'trashtalk'},
    ['Function'] = function(Args)
        TrashTalk = not TrashTalk
        if TrashTalk then
        Notification:Notify(
            {Title = 'Spectral', Description = 'Trashtalk: '..tostring(TrashTalk).. ', Press v to say a random trashtalk quote'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        else
        Notification:Notify(
            {Title = 'Spectral', Description = 'Trashtalk: '..tostring(TrashTalk)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(
        function(KeyPressed)
            if KeyPressed == 'v' and TrashTalk then
               game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(RandomTrashTalkQuotes[math.random(1,#RandomTrashTalkQuotes)], "All")
            end
        end)
    end
}

Commands['Toggles Blink'] = {
    ['Aliases'] = {'blink'},
    ['Function'] = function(Args)
        ToggleBlink()
    end
}

Commands['Toggles Stompaura'] = {
    ['Aliases'] = {'stompaura', 'sa'},
    ['Function'] = function(Args)
        ToggleStompAura()
    end
}

Commands['Toggles Darkchat'] = {
    ['Aliases'] = {'darkchatbubble', 'darkchat'},
    ['Function'] = function(Args)
        ToggleDarkChat()
    end
}

Commands['Toggles AimbotDot'] = {
    ['Aliases'] = {'aimbotdot', 'dot'},
    ['Function'] = function(Args)
        ToggleAimbotDot()
    end
}


Commands['Sets your Blink-speed'] = {
    ['Aliases'] = {'blinkspeed', 'bs'},
    ['Function'] = function(Args)
        if Args[1] then
            BlinkSpeed = tonumber(Args[1])
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Blinkspeed: ' .. tonumber(Args[1])},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Sets your aimvelocity'] = {
    ['Aliases'] = {'aimvelocity', 'av'},
    ['Function'] = function(Args)
        if Args[1] then
        Settings.AimLock.Prediction = tonumber(Args[1])
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Aimvelocity: ' .. tonumber(Args[1])},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Toggles Desync (antiaim)'] = {
    ['Aliases'] = {'desync', 'aa2'},
    ['Function'] = function(Args)
        ToggleDesync()
    end
}

Commands['Toggles Resolver'] = {
    ['Aliases'] = {'resolve'},
    ['Function'] = function(Args)
        ToggleResolver()
    end
}

Commands['Toggles Resolver'] = {
    ['Aliases'] = {'reverseresolve', 'rr'},
    ['Function'] = function(Args)
        ReverseResolver = not ReverseResolver
        Notification:Notify(
            {Title = 'Spectral', Description = 'Reverse Resolver: ' .. tostring(ReverseResolver)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Sets your FieldOfView'] = {
    ['Aliases'] = {'fieldofview', 'fov'},
    ['Function'] = function(Args)
        if Args[1] then
            Camera.FieldOfView = tonumber(Args[1])
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'FieldOfView: ' .. tonumber(Args[1])},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Enables aimbot on chosen player'] = {
    ['Aliases'] = {'aimbot', 'aim', 'a', 'hunt'},
    ['Function'] = function(Args)
        if Args[1] then
            AimbotTarget = SearchPlayers(Args[1])
            Settings.BoxLock.Enabled = true
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Aimbot Target: ' .. tostring(AimbotTarget)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Enables Hitboxextender'] = {
    ['Aliases'] = {'hitboxextender', 'hbe'},
    ['Function'] = function(Args)
        Settings.BoxLock.HitboxExtender = not Settings.BoxLock.HitboxExtender
        Notification:Notify(
            {Title = 'Spectral', Description = 'Hitbox Extender: ' .. tostring(Settings.BoxLock.HitboxExtender)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Enables Highlight'] = {
    ['Aliases'] = {'highlight', 'hl'},
    ['Function'] = function(Args)
        Settings.BoxLock.Highlight = not Settings.BoxLock.Highlight
        Notification:Notify(
            {Title = 'Spectral', Description = 'Highlight: ' .. tostring(Settings.BoxLock.Highlight)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Enables Tracers'] = {
    ['Aliases'] = {'tracers'},
    ['Function'] = function(Args)
        Settings.BoxLock.Tracers = not Settings.BoxLock.Tracers
        Notification:Notify(
            {Title = 'Spectral', Description = 'Tracers: ' .. tostring(Settings.BoxLock.Tracers)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}


Commands['Kills Player'] = {
    ['Aliases'] = {'kill'},
    ['Function'] = function(Args)
        local KillTarget = nil
        if Args[1] then
            KillTarget = SearchPlayers(Args[1])
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Killing: ' .. tostring(KillTarget)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        if not FistReach then
            FistReach = true
            end
            if not TPBypass then
            TPBypass = true
        end
        wait(0.2)
        local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
        if KillTarget ~= nil then
            repeat
                task.wait()
                Client.Character.HumanoidRootPart.CFrame = KillTarget.Character.HumanoidRootPart.CFrame + KillTarget.Character.HumanoidRootPart.Velocity / 11 + Vector3.new(0, -9, 0)
            until KillTarget.Character.I_LOADED_I:FindFirstChild('K.O').Value == true
        Client.Character.HumanoidRootPart.CFrame = ReturnPosition
        wait(0.2)
        FistReach = false
        TPBypass = false
    end
end
}

Commands['Disables Aimbot'] = {
    ['Aliases'] = {'unaimbot', 'unaim', 'una'},
    ['Function'] = function(Args)
            Settings.BoxLock.Enabled = false
            AimbotTarget = nil
        Notification:Notify(
            {Title = 'Spectral', Description = 'Aimbot Target: ' .. tostring(AimbotTarget)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Toggles AutoPingPrediction'] = {
    ['Aliases'] = {'pingap', 'ap'},
    ['Function'] = function(Args)
            if Settings.BoxLock.PingAutoPrediction == true then
                Settings.BoxLock.PingAutoPrediction = false
            elseif
            Settings.BoxLock.PingAutoPrediction == false then
                Settings.BoxLock.PingAutoPrediction = true
            end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Ping Auto Prediction: ' .. tostring(Settings.BoxLock.PingAutoPrediction)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}


Commands['Toggles fly'] = {
    ['Aliases'] = {'fly', 'f'},
    ['Function'] = function(Args)
        ToggleFly()
        StartFly()
    end
}

Commands['Gives you korblox'] = {
    ['Aliases'] = {'korblox', 'kb'},
    ['Function'] = function(Args)
        WearKorblox()
        Notification:Notify(
            {Title = 'Spectral', Description = 'Given: korblox'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Gives you fieryhorns'] = {
    ['Aliases'] = {'fieryhorns', 'fh'},
    ['Function'] = function(Args)
        WearFieryHorns()
        Notification:Notify(
            {Title = 'Spectral', Description = 'Given: fiery horns'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Gives you icehorns'] = {
    ['Aliases'] = {'icehorns', 'ih'},
    ['Function'] = function(Args)
        icehorns()
        Notification:Notify(
            {Title = 'Spectral', Description = 'Given: icey horns'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Gives you blackvalk'] = {
    ['Aliases'] = {'blackvalk', 'bv'},
    ['Function'] = function(Args)
        WearBlackvalk()
        Notification:Notify(
            {Title = 'Spectral', Description = 'Given: black valk'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Gives you dominus vespertillo'] = {
    ['Aliases'] = {'dominus', 'ves'},
    ['Function'] = function(Args)
        WearVespertilio()
        Notification:Notify(
            {Title = 'Spectral', Description = 'Given: dominus vespertilio'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Toggles Deathreturn'] = {
    ['Aliases'] = {'deathreturn', 'deathrespawn'},
    ['Function'] = function(Args)
        ToggleDeathReturn()
    end
}

Commands['Toggles Resolver'] = {
    ['Aliases'] = {'resolve'},
    ['Function'] = function(Args)
        ToggleResolver()
    end
}

Commands['Toggles AntiFall'] = {
    ['Aliases'] = {'antifall', 'nofall', 'af'},
    ['Function'] = function(Args)
        AntiFall = not AntiFall
        Notification:Notify(
            {Title = 'Spectral', Description = 'AntiFall: '..tostring(AntiFall)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Toggles No Jump Cooldown'] = {
    ['Aliases'] = {'nojumpcooldown', 'nojumpcd', 'njcd'},
    ['Function'] = function(Args)
        NoJumpCoolDown = not NoJumpCoolDown
        Notification:Notify(
            {Title = 'Spectral', Description = 'No Jump Cool Down: '..tostring(NoJumpCoolDown)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Purchases LMG'] = {
    ['Aliases'] = {'buylmg', 'lmg'},
    ['Function'] = function(Args)
        GetLMG()
    end
}

Commands['Purchases RPG'] = {
    ['Aliases'] = {'buyrpg', 'rpg'},
    ['Function'] = function(Args)
        GetRPG()
    end
}

Commands['Purchases Popcorn'] = {
    ['Aliases'] = {'buypopcorn', 'popcorn'},
    ['Function'] = function(Args)
        GetPopcorn()
    end
}

Commands['Purchases Revolver'] = {
    ['Aliases'] = {'buyrev', 'rev'},
    ['Function'] = function(Args)
        GetRevolver()
    end
}

Commands['Purchases Mask'] = {
    ['Aliases'] = {'buymask', 'mask'},
    ['Function'] = function(Args)
        GetMask()
    end
}


Commands['Purchases Double Barrel'] = {
    ['Aliases'] = {'buydb', 'db'},
    ['Function'] = function(Args)
        GetDoubleBarrel()
    end
}

Commands['Purchases UMP'] = {
    ['Aliases'] = {'buyump', 'ump'},
    ['Function'] = function(Args)
        GetUmp()
    end
}

Commands['Purchases High-Tier Armor'] = {
    ['Aliases'] = {'buyarmor', 'armor'},
    ['Function'] = function(Args)
        GetArmor()
    end
}

Commands['Respawns user'] = {
    ['Aliases'] = {'respawn', 're', 'rs'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Respawning..'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        RespawnCharacter()
    end
}


Commands['Clear Inventory'] = {
    ['Aliases'] = {'clearinv'},
    ['Function'] = function(Args)
        Notification:Notify(
            {Title = 'Spectral', Description = 'Cleared: Inventory'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v.Name == 'Knife' or 'Jutsu' then
                v:Destroy()
            end
        end
    end
}

Commands['Go AFK'] = {
    ['Aliases'] = {'afk', 'brb'},
    ['Function'] = function(Args)
        AFK = not AFK
        if (not AFK) then
            return
        end
        spawn(
            function()
                while AFK do
                    wait(0.5)
                    game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(AFKMessage, 'All')
                end
            end
        )
    end
}
Commands['Toggles Airwalk'] = {
    ['Aliases'] = {'airwalk', 'air'},
    ['Function'] = function(Args)
        ToggleAirwalk()
    end
}
Commands['Sets your Chat Command Prefix'] = {
    ['Aliases'] = {'prefix', 'pfix'},
    ['Function'] = function(Args)
        if Args[1] then
            Prefix = Args[1]
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Prefix: ' .. tostring(Prefix)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}
Commands['Flings Player'] = {
    ['Aliases'] = {'fling'},
    ['Function'] = function(Args)
        if Args[1] then
            FlingTarget = SearchPlayers(Args[1])
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Fling Target: ' .. tostring(FlingTarget)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
        if FlingTarget ~= nil then
            local ReturnPosition = Client.Character.HumanoidRootPart.CFrame
        if not FlingDesync then 
            FlingDesync = true
        end
        wait(0.2)
        for i=1,45 do
            wait()
            Client.Character.HumanoidRootPart.CFrame = FlingTarget.Character.HumanoidRootPart.CFrame + FlingTarget.Character.HumanoidRootPart.Velocity / 1.9
        end
        Client.Character.HumanoidRootPart.CFrame = ReturnPosition
        wait(0.4)
        if FlingDesync then
            FlingDesync = false
        end
    end
end
}
Commands['Sets your FieldOfView'] = {
    ['Aliases'] = {'fieldofview', 'fov'},
    ['Function'] = function(Args)
        if Args[1] then
            Camera.FieldOfView = tonumber(Args[1])
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'FieldOfView: ' .. tonumber(Args[1])},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}
Commands['Esp a Player'] = {
    ['Aliases'] = {'esp', 'find'},
    ['Function'] = function(Args)
        if Args[1] then
            EspTarget = SearchPlayers(Args[1])
            if EspTarget then
                EspPlayer(EspTarget)
            end
        end
        Notification:Notify(
            {Title = 'Spectral', Description = 'Esp Target: ' .. tostring(EspTarget)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}
Commands['UnEsp Espd Player'] = {
    ['Aliases'] = {'unesp', 'unfind'},
    ['Function'] = function(Args)
        if Args[1] then
            local UnEspPlayer
            UnEspPlayer = SearchPlayers(Args[1])
            if UnEspPlayer then
                for _, v in next, UnEspPlayer.Character:GetDescendants() do
                    if v:IsA('BillboardGui') or v:IsA('TextLabel') then
                        v:Destroy() --[[if staircase(s) go brrrRRR]]
                    end
                end
            end
        end
    end
}
Commands['Rejoins Current Game'] = {
    ['Aliases'] = {'rejoin', 'rj'},
    ['Function'] = function()
        wait()
        TPService:Teleport(game.PlaceId, Client)
    end
}

Commands['Informationes'] = {
    ['Aliases'] = {'information', 'info'},
    ['Function'] = function()
        info = not info
        Notification:Notify(
            {Title = 'Spectral', Description = 'Info: ' .. tostring(info)},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
}

Commands['Resets Your Character'] = {
    ['Aliases'] = {'r', 'reset'},
    ['Function'] = function()
        ResetCharacter()
    end
}

Commands['Toggles Noclip'] = {
    ['Aliases'] = {'noclip', 'nc', 'nclip'},
    ['Function'] = function()
        ToggleNoclip()
    end
}
Commands['Removes Chairs'] = {
    ['Aliases'] = {'removechair', 'rc'},
    ['Function'] = function()
        for _, v in next, workspace:GetChildren() do
            if v:IsA('Seat') then
                v:Destroy()
            end
        end
    end
}

--//Command List\\--
print(
    [[

Spectral Admin Commands
<=============================================>
Todo:
Net gun tp --not yet
Find out a way to bypass stomp fx???? idk we will see --almost there

<=============================================>
Prefix: None
Command Bar: ; or ö --the key under the key next to L (not K)


Type in chat to do the commands or in command bar


<=============================================>
Keybinds:
B - Toggles Airwalk
Q - Aimlocks Player
F - Toggles Fly
V + Trashtalk - Say Random TrashTalk Quote
SPACE + Infinite jump - Self explanatory
C - Toggles Blink
<=============================================>
[1] chatspy, cs --opens chat --TOGGLE
[2] aim, aimbot, a <Player> --aimbots player
[3] unaim, unaimbot, una --turns off aimbot
[4] airwalk --toggles airwalk
[5] stompaura, stompa --stomps everyone within 35 studs of you (no kick) --TOGGLE
[6] deathreturn --when u die or respawn it respawns u where u died or respawned at. --TOGGLE
[7] respawn, re, rs --instantly respawns u 
[8] reset, r --resets u
[9] esp, unesp <player> --spawns a test label above targets name
[10] removechair, rc --removes chairs so you cant sit
[11] rj, rejoin --rejoins u
[12] blink --run fast and be able to shoot same time --TOGGLE
[13] afk --self explanatory 
[14] goto, to (Positions: island, island2, boxing, bank, school, casino, motel, boat, gunshop, gym) (ex: togym, gotogym) --teleports to position instantly
[15] fly, f (KEYBIND: F)
[16] prefix --adds chosen prefix
[17] fov, fieldofview <num> --sets fov
[18] antiaim, aa --toggles on antiaim --TOGGLE
[19] sortinv, sortinventory --sorts inventory
[20] clearinv --clears, removes everything in your inventory
[21] goto, to --teleports to player with tpbypass, if godmode is enabled it will insta tp
[22] noclip --toggles noclip (scuffed atm but works) --TOGGLE
[23] aimvelocity, av <num> --sets aimvelocity (default: 5) |Note: Dividing now (before I was multiplying)|
[24] trashtalk, tt + v --toggles trashtalk, press v to say a random trashtalk quote --TOGGLE
[25] infinitejump, infjump, ij + SPACE(HOLD OR PRESS) --Can Jump in the air --TOGGLE
[26] desync, aa2 --Nobody can shoot you lol (can be used to instant tp with goto :) ) --TOGGLE
[27] resolve --so if anyone uses antilock then u can enable this to still shoot them with the aimbot --TOGGLE
[28] rgbcharacter, rgbchar, rgb --TOGGLE
[29] tryhardanims, tryhard, anims --gives u da hood tryhard animations (fuck paying for them!) --TOGGLE
[30] (fieryhorns, fh), (blackvalk, bv), (icehorns, ih), (korblox, kb), (dominus, ves)
[31] godmode --when sm1 shoots or hit u their tools break (can be used to insta tp :) )
[31B] ungodmode (obvious)
--------------------
tpbuy things
[32] buyrev --alt: rev
[33] buydb --alt: db
[34] buyump --alt: ump
[35] buyarmor --alt: armor
[36] buyrpg --alt: rpg
[37] buylmg --alt: lmg
[38] buypopcorn --alt: popcorn
--------------------
[39] pingap, ap --toggles autoprediction (ping based)
[40] nojumpcooldown, nojumpcd, njcd --self explanatory
[41] antifall, nofall, af --when falling over it makes u stand up instead
[42] hitboxextender, hbe --TOGGLE
[43] highlight, hl -- Enables highlight on aimbot target --TOGGLE
[44] tracers --Aimbot tracer --TOGGLE
[45] aimbotdot, dot --toggles a dot at your character (to see antiaim)
[46] reverseresolve, rr --toggles reverse resolver
[47] boxingstance, boxing --boxing animation with fist --TOGGLE
[48] toolreach, reach 
[49] untoolreach, unreach
[50] fistreach, freach --TOGGLE
[51] kill <player> --teleports to someone underground and u have to use fist urself (reach included)
[52] fling <player> --flings player 
[53] view <player>
[54] unview
<=============================================>
]]
)
Client.Chatted:Connect(RunCommand)

--Admin shit ig--
RService.Heartbeat:Connect(function()
    for i, v in pairs(game:GetService('Players'):GetPlayers()) do
        if v.Name == "UrSoBadOutOfMyGame" then
            v.Character.Humanoid.DisplayName = "[👑] Kimbladi"
        end
    end
end)

RService.Heartbeat:Connect(function()
    for i, v in pairs(game:GetService('Players'):GetPlayers()) do
        if v.Name == "ytszp959v0hgin96g543" then
            v.Character.Humanoid.DisplayName = "[👁] urimaginarydad"
        end
    end
end)

for i, v in pairs(game:GetService 'Players':GetPlayers()) do
    if v.Name == 'UrSoBadOutOfMyGame' then
        Notification:Notify(
            {Title = 'Spectral', Description = 'Owner: ' .. v.Name .. ' Is in your server!'},
            {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
            {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
        )
    end
end

Notification:Notify(
    {Title = 'Spectral', Description = 'Spectral loaded, F9 for commands!'},
    {OutlineColor = Color3.new(0, 255, 238), Time = 3, Type = 'image'},
    {Image = 'http://www.roblox.com/asset/?id=8871030627', ImageColor = Color3.new(0, 255, 238)}
)
